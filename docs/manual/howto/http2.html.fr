<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="fr" xml:lang="fr"><head>
<meta content="text/html; charset=ISO-8859-1" http-equiv="Content-Type" />
<!--
        XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
              This file is generated from xml source: DO NOT EDIT
        XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
      -->
<title>Guide HTTP/2 - Serveur HTTP Apache Version 2.5</title>
<link href="../style/css/manual.css" rel="stylesheet" media="all" type="text/css" title="Main stylesheet" />
<link href="../style/css/manual-loose-100pc.css" rel="alternate stylesheet" media="all" type="text/css" title="No Sidebar - Default font size" />
<link href="../style/css/manual-print.css" rel="stylesheet" media="print" type="text/css" /><link rel="stylesheet" type="text/css" href="../style/css/prettify.css" />
<script src="../style/scripts/prettify.min.js" type="text/javascript">
</script>

<link href="../images/favicon.ico" rel="shortcut icon" /></head>
<body id="manual-page"><div id="page-header">
<p class="menu"><a href="../mod/">Modules</a> | <a href="../mod/quickreference.html">Directives</a> | <a href="http://wiki.apache.org/httpd/FAQ">FAQ</a> | <a href="../glossary.html">Glossaire</a> | <a href="../sitemap.html">Plan du site</a></p>
<p class="apache">Serveur HTTP Apache Version 2.5</p>
<img alt="" src="../images/feather.png" /></div>
<div class="up"><a href="./"><img title="&lt;-" alt="&lt;-" src="../images/left.gif" /></a></div>
<div id="path">
<a href="http://www.apache.org/">Apache</a> &gt; <a href="http://httpd.apache.org/">Serveur HTTP</a> &gt; <a href="http://httpd.apache.org/docs/">Documentation</a> &gt; <a href="../">Version 2.5</a> &gt; <a href="./">How-To / Tutoriels</a></div><div id="page-content"><div id="preamble"><h1>Guide HTTP/2</h1>
<div class="toplang">
<p><span>Langues Disponibles: </span><a href="../en/howto/http2.html" hreflang="en" rel="alternate" title="English">&nbsp;en&nbsp;</a> |
<a href="../es/howto/http2.html" hreflang="es" rel="alternate" title="Espa&#241;ol">&nbsp;es&nbsp;</a> |
<a href="../fr/howto/http2.html" title="Fran&#231;ais">&nbsp;fr&nbsp;</a></p>
</div>

    <p>Ce document est le guide de l'utilisateur de l'impl&#233;mentation de HTTP/2
    dans Apache httpd. Cette fonctionnalit&#233; en est au stade
    <em>de production</em>, et les interfaces et directives devraient donc &#234;tre
    dor&#233;navant relativement stables.
    </p>
  </div>
<div id="quickview"><ul id="toc"><li><img alt="" src="../images/down.gif" /> <a href="#protocol">Le protocole HTTP/2</a></li>
<li><img alt="" src="../images/down.gif" /> <a href="#implementation">HTTP/2 dans Apache httpd</a></li>
<li><img alt="" src="../images/down.gif" /> <a href="#building">Compilation de httpd avec le support de HTTP/2</a></li>
<li><img alt="" src="../images/down.gif" /> <a href="#basic-config">Configuration de base</a></li>
<li><img alt="" src="../images/down.gif" /> <a href="#mpm-config">Configuration du MPM</a></li>
<li><img alt="" src="../images/down.gif" /> <a href="#clients">Clients</a></li>
<li><img alt="" src="../images/down.gif" /> <a href="#tools">Outils efficaces pour d&#233;boguer HTTP/2</a></li>
<li><img alt="" src="../images/down.gif" /> <a href="#push">Push serveur</a></li>
<li><img alt="" src="../images/down.gif" /> <a href="#earlyhints">Suggestions pr&#233;coces</a></li>
</ul><h3>Voir aussi</h3><ul class="seealso"><li><code class="module"><a href="../mod/mod_http2.html">mod_http2</a></code></li><li><a href="#comments_section">Commentaires</a></li></ul></div>
<div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="section">
<h2><a name="protocol" id="protocol">Le protocole HTTP/2</a><a title="Lien permanent" href="#protocol" class="permalink">&para;</a></h2>
    
    <p>HTTP/2 est une &#233;volution du protocole de la couche application le plus
    utilis&#233; au monde, HTTP. Cette &#233;volution permet en particulier une utilisation
    plus efficace des ressources r&#233;seau. Il ne modifie pas les aspects
    fondamentaux de HTTP (sa s&#233;mantique). Entre autres, il y a toujours des
    requ&#234;tes, des r&#233;ponses et des en-t&#234;tes. Par cons&#233;quent, si vous connaissez
    HTTP/1, vous connaissez d&#233;j&#224; 95% de HTTP/2.</p>
    <p>Beaucoup a d&#233;j&#224; &#233;t&#233; &#233;crit &#224; propos de HTTP/2 et de son fonctionnement. La
    documentation la plus officielle est bien entendu sa <a href="https://tools.ietf.org/html/rfc7540">RFC 7540</a> (ou <a href="http://httpwg.org/specs/rfc7540.html">cette version au format plus
    lisible</a>). Vous trouverez ici une description des rouages de HTTP/2 dans
    leurs moindres d&#233;tails.</p>
    <p>Le premier document &#224; lire lorsqu'on ne conna&#238;t pas un m&#233;canisme n'est
    cependant pas sa RFC. Il est pr&#233;f&#233;rable de comprendre tout d'abord <em>ce
    que</em> ce m&#233;canisme est cens&#233; faire, et seulement ensuite de lire sa RFC
    pour comprendre <em>comment</em> il fonctionne. <a href="https://daniel.haxx.se/http2/">http2  explained</a> de Daniel Stenberg
    (l'auteur de <a href="https://curl.haxx.se">curl</a>)
    est un bien meilleur document pour d&#233;marrer l'&#233;tude de HTTP/2. En outre, de
    nouveaux langages s'ajoutent r&#233;guli&#232;rement &#224; sa liste de traductions
    disponibles !</p>
    <p>Si vous n'avez pas envie de le lire parce que vous le trouvez trop long,
    voici certains pi&#232;ges &#224; &#233;viter et nouveaux termes &#224; conna&#238;tre avant de lire
    ce document :</p>
    <ul>
        <li>A la diff&#233;rence de HTTP/1 qui est en texte pur, HTTP/2 est un
	<strong>protocole binaire</strong>, et alors que le premier est lisible par
	un humain (par exemple pour sniffer le trafic r&#233;seau), le second ne
	l'est pas. Voir la <a href="https://http2.github.io/faq/#why-is-http2-binary">FAQ
	officielle</a> pour plus de d&#233;tails.</li>
        <li><strong>h2</strong> correspond &#224; HTTP/2 sur TLS (n&#233;gociation de
	protocole via ALPN).</li>
        <li><strong>h2c</strong> correspond &#224; HTTP/2 sur TCP.</li>
	<li>Une <strong>frame</strong> ou trame est la plus petite unit&#233; de
	communication au sein d'une connexion HTTP/2 et comporte une en-t&#234;te et
	une s&#233;quence d'octets de longueur variable dont la structure correspond
	au type de trame. Voir la <a href="http://httpwg.org/specs/rfc7540.html#FramingLayer">section
	correspondante</a> de la documentation officielle pour plus de
	d&#233;tails.</li>
        <li>Un <strong>stream</strong> est un flux bidirectionnel de frames au
	sein d'une connexion HTTP/2. La notion correspondante dans HTTP/1 est un
	&#233;change de messages de type requ&#234;te et r&#233;ponse. Voir la <a href="http://httpwg.org/specs/rfc7540.html#StreamsLayer">section
	correspondante</a> de la documentation officielle pour plus de d&#233;tails.</li>
        <li>HTTP/2 peut g&#233;rer <strong>plusieurs streams</strong> de donn&#233;es sur
	la m&#234;me connexion TCP, ce qui permet d'&#233;viter le point de blocage
	classique de HTTP/1 pour les requ&#234;tes lentes, et de ne pas avoir &#224;
	ouvrir de nouvelles connexions TCP pour chaque requ&#234;te/r&#233;ponse (les
	connexions persistantes ou KeepAlive avaient contourn&#233; le probl&#232;me dans
	HTTP/1 mais ne l'avaient pas enti&#232;rement r&#233;solu)</li>
    </ul>
  </div><div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="section">
<h2><a name="implementation" id="implementation">HTTP/2 dans Apache httpd</a><a title="Lien permanent" href="#implementation" class="permalink">&para;</a></h2>
    
    <p>Le protocole HTTP/2 est impl&#233;ment&#233; dans Apache httpd via un module
    propre, pertinemment nomm&#233; <code class="module"><a href="../mod/mod_http2.html">mod_http2</a></code>. Ce
    module impl&#233;mente toutes les fonctionnalit&#233;s d&#233;crites par la RFC 7540 et
    supporte les connexions en texte pur (http:), ou s&#233;curis&#233;es (https:).
    La variante texte pur se nomme '<code>h2c</code>', et la variante s&#233;curis&#233;e
    '<code>h2</code>'. <code>h2c</code> peut &#234;tre en mode <em>direct</em> ou
    <code>Upgrade:</code> via une requ&#234;te initiale en HTTP/1.</p>
    <p><a href="#push">Server Push</a> est une nouvelle fonctionnalit&#233; offerte
    aux d&#233;veloppeurs web par HTTP/2. La section correspondante de ce document
    vous indiquera comment votre application peut en tirer parti.</p>
  </div><div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="section">
<h2><a name="building" id="building">Compilation de httpd avec le support de HTTP/2</a><a title="Lien permanent" href="#building" class="permalink">&para;</a></h2>
    
    <p><code class="module"><a href="../mod/mod_http2.html">mod_http2</a></code> se base sur la biblioth&#232;que
    de <a href="https://nghttp2.org">nghttp2</a> pour son impl&#233;mentation. Pour
    pouvoir compiler <code class="module"><a href="../mod/mod_http2.html">mod_http2</a></code>, <code>libnghttp2</code> version
    1.2.1. ou sup&#233;rieure doit &#234;tre install&#233;e dans votre syst&#232;me.</p>
    <p>Pour d&#233;clencher la compilation de <code>mod_http2</code>, vous devez
    ajouter l'argument '<code>--enable-http2</code>' au script
    <code>./configure</code> que vous ex&#233;cutez &#224; la racine de l'arborescence des
    sources de httpd. Si <code>libnghttp2</code> est install&#233;e dans un
    r&#233;pertoire non connu du chemin de vos biblioth&#232;ques, vous devez indiquer ce
    r&#233;pertoire au script <code>./configure</code> via l'argument
    '<code>--with-nghttp2=&lt;path&gt;</code>'.</p>
    <p>Alors que cette m&#233;thode de compilation conviendra &#224; la plupart, certains
    pr&#233;f&#233;reront lier statiquement <code>nghttp2</code> &#224; ce module. Pour ce
    faire, utilisez l'argument <code>--enable-nghttp2-staticlib-deps</code>.
    Cette m&#233;thode est pratiquement la m&#234;me que celle utilis&#233;e pour lier
    statiquement openssl &#224; <code class="module"><a href="../mod/mod_ssl.html">mod_ssl</a></code>.</p>
    <p>En parlant de SSL, vous devez savoir que la plupart des navigateurs ne
    communiqueront en HTTP/2 que sur des URLs s&#233;curis&#233;es de type
    <code>https:</code> ; votre serveur doit donc supporter SSL. Mais de plus,
    votre biblioth&#232;que SSL devra supporter l'extension <code>ALPN</code>. Enfin,
    si la biblioth&#232;que que vous utilisez est OpenSSL, sa version devra &#234;tre
    1.0.2. ou sup&#233;rieure.</p>
  </div><div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="section">
<h2><a name="basic-config" id="basic-config">Configuration de base</a><a title="Lien permanent" href="#basic-config" class="permalink">&para;</a></h2>
    

    <p>Maintenant que vous disposez d'un binaire <code>httpd</code> compil&#233; avec le
    module <code class="module"><a href="../mod/mod_http2.html">mod_http2</a></code>, l'activation de ce dernier n&#233;cessite un
    minimum de configuration suppl&#233;mentaire. En premier lieu, comme pour tout
    module Apache, vous devez le charger :</p>
    <pre class="prettyprint lang-config">LoadModule http2_module modules/mod_http2.so</pre>


    <p>La seconde directive que vous devez ajouter &#224; votre fichier de
    configuration est</p>
    <pre class="prettyprint lang-config">Protocols h2 http/1.1</pre>

    <p>Ceci permet de d&#233;finir h2, la variante s&#233;curis&#233;e, comme le protocole
    pr&#233;f&#233;r&#233; pour les connexions &#224; votre serveur. Si vous souhaitez que toutes les
    variantes soient disponibles, utilisez la directive suivante :</p>
    <pre class="prettyprint lang-config">Protocols h2 h2c http/1.1</pre>

    <p>Selon l'endroit o&#249; vous placez cette directive, elle affectera l'ensemble
    de votre serveur, ou seulement un ou plusieurs serveurs virtuels. Vous
    pouvez aussi l'imbriquer comme dans l'exemple suivant :</p>
    <pre class="prettyprint lang-config">Protocols http/1.1
&lt;VirtualHost ...&gt;
    ServerName test.example.org
    Protocols h2 http/1.1
&lt;/VirtualHost&gt;</pre>


    <p>Seules les connexions en HTTP/1 seront alors permises, sauf pour le serveur
    virtuel <code>test.example.org</code> qui acceptera aussi les connexions SSL
    en HTTP/2.</p>
    <div class="note"><h3>Utilisez une cha&#238;ne d'algorithmes de chiffrement forte</h3>
    <p>La directive <code class="directive"><a href="../mod/mod_ssl.html#sslciphersuite">SSLCipherSuite</a></code> doit
    &#234;tre d&#233;finie avec une cha&#238;ne d'algorithmes de chiffrement TLS forte. M&#234;me si
    la version actuelle de <code class="module"><a href="../mod/mod_http2.html">mod_http2</a></code> n'impose pas d'algorithmes de chiffrement
    particuliers, la plupart des clients le font. Faire pointer un navigateur
    vers un serveur o&#249; <code>h2</code> est activ&#233; avec une cha&#238;ne d'algorithmes
    de chiffrement inappropri&#233;e entra&#238;nera un rejet et une retrogradation vers
    HTTP 1.1. C'est une erreur que l'on fait couramment lorsqu'on configure
    httpd pour HTTP/2 pour la premi&#232;re fois ; donc gardez la &#224; l'esprit si vous
    voulez &#233;viter de longues sessions de d&#233;bogage ! Si vous voulez &#234;tre s&#251;r de
    d&#233;finir une cha&#238;ne d'algorithmes de chiffrement appropri&#233;e, &#233;vitez ceux qui
    sont list&#233;s dans la <a href="http://httpwg.org/specs/rfc7540.html#BadCipherSuites">blacklist TLS HTTP/2
    </a>.</p>
    </div>
    <p>L'ordre des protocoles indiqu&#233;s est aussi important. Par d&#233;faut, le
    premier sera le protocole pr&#233;f&#233;r&#233;. Lorsqu'un client offre plusieurs choix,
    c'est le plus &#224; gauche qui sera s&#233;lectionn&#233;. Dans</p>
    <pre class="prettyprint lang-config">Protocols http/1.1 h2</pre>

    <p>le protocole pr&#233;f&#233;r&#233; sera HTTP/1 et il sera toujours s&#233;lectionn&#233; sauf si
    un client ne supporte <em>que</em> h2. Comme nous souhaitons communiquer en
    HTTP/2 avec les clients qui le supportent, la meilleure d&#233;finition de la
    directive est</p>
    <pre class="prettyprint lang-config">Protocols h2 h2c http/1.1</pre>


    <p>Toujours &#224; propos de l'ordre des protocoles, le client a lui aussi ses
    propres pr&#233;f&#233;rences en la mati&#232;re. &#192; ce titre, si vous le souhaitez, vous
    pouvez configurer votre serveur pour qu'il s&#233;lectionne non plus son
    protocole pr&#233;f&#233;r&#233;, mais au contraire le protocole pr&#233;f&#233;r&#233;
    du client :</p>
    <pre class="prettyprint lang-config">ProtocolsHonorOrder Off</pre>

    <p>Avec cette directive, l'ordre des protocoles que <em>vous</em> avez
    d&#233;fini devient caduque et seul l'ordre d&#233;fini par le client sera pris en
    compte.</p>
    <p>Une derni&#232;re chose : les protocoles que vous d&#233;finissez ne sont pas
    v&#233;rifi&#233;s quant &#224; leurs validit&#233; ou orthographe. Vous pouvez tr&#232;s bien
    d&#233;finir des protocoles qui n'existent pas, et il n'est donc pas n&#233;cessaire
    de filtrer le contenu de la directive <code class="directive"><a href="../mod/core.html#protocols">Protocols</a></code> avec des v&#233;rifications de type
    <code class="directive"><a href="../mod/core.html#ifmodule">&lt;IfModule&gt;</a></code>.</p>
    <p>Pour des conseils plus avanc&#233;s &#224; propos de la configuration, voir la <a href="../mod/mod_http2.html">Documentation de mod_http2</a>, et en particulier
    la section &#224; propos de la <a href="../mod/mod_http2.html#dimensioning">consommation suppl&#233;mentaire de
    ressources</a>, ainsi que la section expliquant comment g&#233;rer les <a href="../mod/mod_http2.html#misdirected">serveurs multiples avec certificat
    commun</a>.</p>
  </div><div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="section">
<h2><a name="mpm-config" id="mpm-config">Configuration du MPM</a><a title="Lien permanent" href="#mpm-config" class="permalink">&para;</a></h2>
    

    <p>Tous les modules multiprocessus (MPM) fournis avec httpd supportent
    HTTP/2. Cependant, si vous utilisez le MPM <code class="module"><a href="../mod/prefork.html">prefork</a></code>, vous allez
    faire face &#224; de s&#233;v&#232;res restrictions.</p>
    <p>Avec le MPM <code class="module"><a href="../mod/prefork.html">prefork</a></code>, <code class="module"><a href="../mod/mod_http2.html">mod_http2</a></code> ne traitera
    qu'une requ&#234;te &#224; la fois par connexion alors que les clients tels que les
    navigateurs internet envoient de nombreuses requ&#234;tes au m&#234;me moment. Si
    l'une d'entre elles est longue &#224; traiter (ou implique une longue
    interrogation), les autres requ&#234;tes seront mises en attente.</p>
    <p>Par d&#233;faut, <code class="module"><a href="../mod/mod_http2.html">mod_http2</a></code> ne passe pas outre cette limitation pour
    la simple et bonne raison que le MPM <code class="module"><a href="../mod/prefork.html">prefork</a></code> n'est aujourd'hui
    choisi que si vous ex&#233;cutez des moteurs de traitement qui ne sont pas pr&#233;par&#233;s
    pour le multithreading (par exemple qui se crashent lorsque plusieurs
    requ&#234;tes arrivent).</p>
    <p>Si votre plateforme et votre installation de httpd le supportent, la
    meilleur solution consiste actuellement &#224; utiliser le MPM
    <code class="module"><a href="../mod/event.html">event</a></code>.
    </p>
    <p>Si vous n'avez pas d'autre choix que d'utiliser le MPM
    <code class="module"><a href="../mod/prefork.html">prefork</a></code>, mais souhaitez tout de m&#234;me traiter plusieurs requ&#234;tes
    simultan&#233;ment, vous pouvez jouer avec la directive <code class="directive"><a href="../mod/mod_http2.html#h2minworkers">H2MinWorkers</a></code>, sans garantie que cela
    fonctionne.</p>
  </div><div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="section">
<h2><a name="clients" id="clients">Clients</a><a title="Lien permanent" href="#clients" class="permalink">&para;</a></h2>
    
    <p>La plupart des navigateurs modernes supportent HTTP/2, mais seulement sur
    des connexions SSL : Firefox v43, Chrome v45, Safari v9, iOS Safari v9,
    Opera v35, Chrome pour Android v49 et
    Internet Explorer v11 sous Windows10 (selon cette <a href="http://caniuse.com/#search=http2">source</a>).</p>
    <p>D'autres clients et serveurs sont list&#233;s dans le <a href="https://github.com/http2/http2-spec/wiki/Implementations">wiki des
    impl&#233;mentations</a> ; entre autres des impl&#233;mentations pour c, c++, common
    lisp, dart, erlang, haskell, java, nodejs, php, python, perl, ruby, rust,
    scala et swift.</p>
    <p>De nombreuses impl&#233;mentations clientes autres que les navigateurs
    supportent HTTP/2 en texte pur, h2c. L'une des plus efficaces d'entre elles
    est <a href="https://curl.haxx.se">curl</a>.</p>
  </div><div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="section">
<h2><a name="tools" id="tools">Outils efficaces pour d&#233;boguer HTTP/2</a><a title="Lien permanent" href="#tools" class="permalink">&para;</a></h2>
    
    <p>Le premier d'entre eux est bien entendu <a href="https://curl.haxx.se">curl</a>. Assurez-vous au pr&#233;alable que votre
    version supporte HTTP/2 en v&#233;rifiant ses <code>Fonctionnalit&#233;s</code> :</p>
    <pre class="prettyprint lang-config">    $ curl -V
    curl 7.45.0 (x86_64-apple-darwin15.0.0) libcurl/7.45.0 OpenSSL/1.0.2d zlib/1.2.8 nghttp2/1.3.4
    Protocols: dict file ftp ftps gopher http https imap imaps ldap ldaps pop3 [...]
    Features: IPv6 Largefile NTLM NTLM_WB SSL libz TLS-SRP <strong>HTTP2</strong>
    </pre>

    <div class="note"><h3>homebrew sous Mac OS :</h3>
    brew install curl --with-openssl --with-nghttp2
    </div>
    <p>Pour une inspection en profondeur : <a href="https://wiki.wireshark.org/HTTP2">wireshark</a>.</p>
    <p>Le paquet <a href="https://nghttp2.org">nghttp2</a> inclut aussi des
    outils comme :</p>
    <ul>
        <li><a href="https://nghttp2.org/documentation/nghttp.1.html">nghttp</a>
	- permet de visualiser les trames HTTP/2 et ainsi de se faire une meilleure
	  id&#233;e du protocole.</li>
        <li><a href="https://nghttp2.org/documentation/h2load-howto.html">h2load</a> -
	permet de tester votre serveur dans des conditions extremes.</li>
    </ul>
    <p>Chrome fournit des journaux d&#233;taill&#233;s des connexions HTTP/2 via la page
    <a href="chrome://net-internals/#http2">special net-internals page</a>. Il y
    a aussi cette extension int&#233;ressante pour <a href="https://chrome.google.com/webstore/detail/http2-and-spdy-indicator/mpbpobfflnpcgagjijhmgnchggcjblin?hl=en">Chrome</a>
    et <a href="https://addons.mozilla.org/en-us/firefox/addon/spdy-indicator/">Firefox</a>
    qui permet d'indiquer que votre navigateur utilise HTTP/2.</p>
  </div><div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="section">
<h2><a name="push" id="push">Push serveur</a><a title="Lien permanent" href="#push" class="permalink">&para;</a></h2>
    
    <p>Le protocole HTTP/2 permet au serveur de proposer (PUSH) des r&#233;ponses
    pour lesquelles le client n'a rien demand&#233;. La communication autour de ces
    r&#233;ponses est du style : "voici une requ&#234;te que vous n'avez jamais
    envoy&#233;e, et la r&#233;ponse vous parviendra bient&#244;t tout de m&#234;me ..."</p>
    <p>Il y a cependant des conditions : le client peut d&#233;sactiver cette
    fonctionnalit&#233; et le serveur ne pourra alors lui proposer des r&#233;ponses que
    pour les requ&#234;tes qu'il a effectivement envoy&#233;es.</p>
    <p>Cette fonctionnalit&#233; a pour but de permettre au serveur d'envoyer au
    client des ressources dont il va probablement avoir besoin : par exemple une
    ressource css ou javascript appartenant &#224; une page html que le client a
    demand&#233;e, un jeu d'images r&#233;f&#233;renc&#233; par un css, etc...</p>
    <p>Cette anticipation a pour avantage de permettre au client d'&#233;conomiser le
    temps qu'il lui aurait fallu pour envoyer une requ&#234;te, quelques
    millisecondes &#224; une demi-seconde en fonction de l'&#233;loignement du serveur.
    Elle a cependant pour inconv&#233;nient d'imposer au client le t&#233;l&#233;chargement de
    ressources qu'il poss&#232;de peut-&#234;tre d&#233;j&#224; dans son cache. Bien entendu, HTTP/2
    permet d'annuler pr&#233;matur&#233;ment de telles requ&#234;tes, mais des ressources sont
    tout de m&#234;me gaspill&#233;es.</p>
    <p>En r&#233;sum&#233; : il n'existe pas encore de strat&#233;gie efficace pour faire le
    meilleur usage de cette fonctionnalit&#233; de HTTP/2 et tout le monde en est
    encore au stade de l'exp&#233;rimentation. &#192; ce titre, voici des conseils pour
    proc&#233;der vous-m&#234;me &#224; ces exp&#233;rimentations :</p>
    <p><code class="module"><a href="../mod/mod_http2.html">mod_http2</a></code> inspecte l'en-t&#234;te de la r&#233;ponse et recherche les
    en-t&#234;tes <code>Link</code> sous un certain format :</p>
    <pre class="prettyprint lang-config">Link &lt;/xxx.css&gt;;rel=preload, &lt;/xxx.js&gt;; rel=preload</pre>

    <p>Si la connexion supporte PUSH, ces deux ressources seront envoy&#233;es au
    client. En tant que d&#233;veloppeur web vous pouvez d&#233;finir ces en-t&#234;tes soit
    directement au niveau de la r&#233;ponse de votre application, soit en
    configurant votre serveur via</p>
    <pre class="prettyprint lang-config">&lt;Location /xxx.html&gt;
    Header add Link "&lt;/xxx.css&gt;;rel=preload"
    Header add Link "&lt;/xxx.js&gt;;rel=preload"
&lt;/Location&gt;</pre>

    <p>Si vous souhaitez utiliser des liens <code>preload</code> sans d&#233;clencher
    de PUSH, vous pouvez utiliser le param&#232;tre <code>nopush</code> comme suit :</p>
    <pre class="prettyprint lang-config">Link &lt;/xxx.css&gt;;rel=preload;nopush</pre>

    <p>Vous pouvez aussi d&#233;sactiver les PUSHes pour l'ensemble de votre
    serveur via la directive</p>
    <pre class="prettyprint lang-config">H2Push Off</pre>

    <p>&#192; savoir aussi :</p>
    <p>Le module maintient un journal des ressources ayant fait l'objet d'un
    PUSH pour chaque connexion (en g&#233;n&#233;ral des condens&#233;s hash des URLs), et
    n'effectuera pas deux fois un PUSH pour la m&#234;me ressource. Cependant,
    lorsque la connexion est ferm&#233;e, le journal de ses PUSHes est supprim&#233;.</p>
    <p>Certains d&#233;veloppeurs planchent sur la mani&#232;re de permettre au client
    d'informer le serveur des ressources qu'il poss&#232;de d&#233;j&#224; dans son cache afin
    d'&#233;viter les PUSHes pour ces derni&#232;res, mais ceci n'en est actuellement qu'&#224;
    un stade tr&#232;s exp&#233;rimental.</p>
    <p>L'<a href="https://tools.ietf.org/html/draft-ruellan-http-accept-push-policy-00">
    en-t&#234;te Accept-Push-Policy</a> est un autre dispositif exp&#233;rimental
    impl&#233;ment&#233; dans <code class="module"><a href="../mod/mod_http2.html">mod_http2</a></code> ; il permet au client de d&#233;finir pour
    chaque requ&#234;te quels genres de PUSHes il accepte.</p>
  

    <p>
    La fonctionnalit&#233; PUSH n'apportera pas toujours le gain de performances dans
    l'obtention de r&#233;ponses aux requ&#234;tes. Vous trouverez plusieurs &#233;tudes sur ce
    sujet sur internet qui en expliquent les avantages et inconv&#233;nients et
    comment les particularit&#233;s des clients et du r&#233;seau en influencent le
    fonctionnement. Par exemple, le seul fait que le serveur PUSHes une
    ressource n'implique pas forc&#233;ment que le navigateur l'utilisera.</p>
    <p>Ce qui influence le plus la r&#233;ponse PUSHed, c'est la requ&#234;te qui a &#233;t&#233;
    simul&#233;e. En effet, l'URL de la requ&#234;te pour un PUSH est fournie par
    l'application, mais d'o&#249; viennent les en-t&#234;tes ? Par exemple, La requ&#234;te
    PUSH requiert-elle un en-t&#234;te <code>accept-language</code> et si oui, quelle
    sera sa valeur ?</p>
    <p>httpd va consulter la requ&#234;te originale (celle qui a d&#233;clench&#233; le PUSH)
    et copier les en-t&#234;tes suivants vers la requ&#234;te PUSH :
    <code>user-agent</code>, <code>accept</code>, <code>accept-encoding</code>,
    <code>accept-language</code> et <code>cache-control</code>.</p>
    <p>Tous les autres en-t&#234;tes sont ignor&#233;s. Les cookies eux non plus ne seront
    pas copi&#233;s. PUSHer des ressources qui requi&#232;rent la pr&#233;sence d'un cookie ne
    fonctionnera pas. Ceci peut &#234;tre sujet &#224; d&#233;bat, mais tant que ce ne sera pas
    clairement discut&#233; avec les navigateurs, restons prudents et &#233;vitons
    d'exposer les cookies l&#224; o&#249; ils ne sont pas cens&#233;s &#234;tre visibles.</p>
  </div><div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="section">
<h2><a name="earlyhints" id="earlyhints">Suggestions pr&#233;coces</a><a title="Lien permanent" href="#earlyhints" class="permalink">&para;</a></h2>
    
    <p>A l'instar des ressources PUSH&#233;es, une autre m&#233;thode consiste &#224; envoyer
    des en-t&#234;tes <code>Link</code> au client avant m&#234;me que la r&#233;ponse ne soit
    pr&#234;te. Cette m&#233;thode utilise la fonctionnalit&#233; appel&#233;e "Suggestions
    pr&#233;coces" (Early Hints) d&#233;crite dans la <a href="https://tools.ietf.org/html/rfc8297">RFC 8297</a>.</p>
    <p>Pour utiliser cette fonctionnalit&#233;, vous devez l'activer explicitement
    sur le serveur via :</p>
    <pre class="prettyprint lang-config">H2EarlyHints on</pre>

    <p>Elle n'est en effet pas activ&#233;e par d&#233;faut car certains navigateurs
    anciens perdent pied avec de telles r&#233;ponses.</p>
    <p>Une fois cette fonctionnalit&#233; activ&#233;e, vous pouvez utiliser la directive
    <code class="directive"><a href="../mod/mod_http2.html#h2pushresource">H2PushResource</a></code> pour d&#233;clencher les
    suggestions pr&#233;coces et les PUSHes de ressources :</p>
    <pre class="prettyprint lang-config">&lt;Location /xxx.html&gt;
    H2PushResource /xxx.css
    H2PushResource /xxx.js
&lt;/Location&gt;</pre>

    <p>Le serveur enverra alors au client une r&#233;ponse <code>"103 Early
    Hints"</code> d&#232;s qu'il <em>commencera</em> &#224; traiter la requ&#234;te. Selon
    votre application web, cet envoi peut intervenir beaucoup plus t&#244;t que le
    moment o&#249; les premiers en-t&#234;tes de r&#233;ponse auront &#233;t&#233; d&#233;termin&#233;s.</p>
    <p>Si <code class="directive"><a href="../mod/mod_http2.html#h2push">H2Push</a></code> est activ&#233;, ceci
    d&#233;clenchera aussi le PUSH juste apr&#232;s la r&#233;ponse 103. Mais si <code class="directive"><a href="../mod/mod_http2.html#h2push">H2Push</a></code> n'est pas activ&#233;, la r&#233;ponse 103 sera
    quand-m&#234;me envoy&#233;e au client.</p>
    </div></div>
<div class="bottomlang">
<p><span>Langues Disponibles: </span><a href="../en/howto/http2.html" hreflang="en" rel="alternate" title="English">&nbsp;en&nbsp;</a> |
<a href="../es/howto/http2.html" hreflang="es" rel="alternate" title="Espa&#241;ol">&nbsp;es&nbsp;</a> |
<a href="../fr/howto/http2.html" title="Fran&#231;ais">&nbsp;fr&nbsp;</a></p>
</div><div class="top"><a href="#page-header"><img src="../images/up.gif" alt="top" /></a></div><div class="section"><h2><a id="comments_section" name="comments_section">Commentaires</a></h2><div class="warning"><strong>Notice:</strong><br />This is not a Q&amp;A section. Comments placed here should be pointed towards suggestions on improving the documentation or server, and may be removed again by our moderators if they are either implemented or considered invalid/off-topic. Questions on how to manage the Apache HTTP Server should be directed at either our IRC channel, #httpd, on Freenode, or sent to our <a href="http://httpd.apache.org/lists.html">mailing lists</a>.</div>
<script type="text/javascript"><!--//--><![CDATA[//><!--
var comments_shortname = 'httpd';
var comments_identifier = 'http://httpd.apache.org/docs/trunk/howto/http2.html';
(function(w, d) {
    if (w.location.hostname.toLowerCase() == "httpd.apache.org") {
        d.write('<div id="comments_thread"><\/div>');
        var s = d.createElement('script');
        s.type = 'text/javascript';
        s.async = true;
        s.src = 'https://comments.apache.org/show_comments.lua?site=' + comments_shortname + '&page=' + comments_identifier;
        (d.getElementsByTagName('head')[0] || d.getElementsByTagName('body')[0]).appendChild(s);
    }
    else {
        d.write('<div id="comments_thread">Comments are disabled for this page at the moment.<\/div>');
    }
})(window, document);
//--><!]]></script></div><div id="footer">
<p class="apache">Copyright 2018 The Apache Software Foundation.<br />Autoris&#233; sous <a href="http://www.apache.org/licenses/LICENSE-2.0">Apache License, Version 2.0</a>.</p>
<p class="menu"><a href="../mod/">Modules</a> | <a href="../mod/quickreference.html">Directives</a> | <a href="http://wiki.apache.org/httpd/FAQ">FAQ</a> | <a href="../glossary.html">Glossaire</a> | <a href="../sitemap.html">Plan du site</a></p></div><script type="text/javascript"><!--//--><![CDATA[//><!--
if (typeof(prettyPrint) !== 'undefined') {
    prettyPrint();
}
//--><!]]></script>
</body></html>