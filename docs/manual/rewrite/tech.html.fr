<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="fr" xml:lang="fr"><head>
<meta content="text/html; charset=ISO-8859-1" http-equiv="Content-Type" />
<!--
        XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
              This file is generated from xml source: DO NOT EDIT
        XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
      -->
<title>D&#233;tails techniques sur le module Apache mod_rewrite - Serveur HTTP Apache Version 2.5</title>
<link href="../style/css/manual.css" rel="stylesheet" media="all" type="text/css" title="Main stylesheet" />
<link href="../style/css/manual-loose-100pc.css" rel="alternate stylesheet" media="all" type="text/css" title="No Sidebar - Default font size" />
<link href="../style/css/manual-print.css" rel="stylesheet" media="print" type="text/css" /><link rel="stylesheet" type="text/css" href="../style/css/prettify.css" />
<script src="../style/scripts/prettify.min.js" type="text/javascript">
</script>

<link href="../images/favicon.ico" rel="shortcut icon" /></head>
<body id="manual-page"><div id="page-header">
<p class="menu"><a href="../mod/">Modules</a> | <a href="../mod/quickreference.html">Directives</a> | <a href="http://wiki.apache.org/httpd/FAQ">FAQ</a> | <a href="../glossary.html">Glossaire</a> | <a href="../sitemap.html">Plan du site</a></p>
<p class="apache">Serveur HTTP Apache Version 2.5</p>
<img alt="" src="../images/feather.png" /></div>
<div class="up"><a href="./"><img title="&lt;-" alt="&lt;-" src="../images/left.gif" /></a></div>
<div id="path">
<a href="http://www.apache.org/">Apache</a> &gt; <a href="http://httpd.apache.org/">Serveur HTTP</a> &gt; <a href="http://httpd.apache.org/docs/">Documentation</a> &gt; <a href="../">Version 2.5</a> &gt; <a href="./">Rewrite</a></div><div id="page-content"><div id="preamble"><h1>D&#233;tails techniques sur le module Apache mod_rewrite</h1>
<div class="toplang">
<p><span>Langues Disponibles: </span><a href="../en/rewrite/tech.html" hreflang="en" rel="alternate" title="English">&nbsp;en&nbsp;</a> |
<a href="../fr/rewrite/tech.html" title="Fran&#231;ais">&nbsp;fr&nbsp;</a></p>
</div>

<p>Ce document passe en revue certains d&#233;tails techniques &#224; propos du
module mod_rewrite et de la mise en correspondance des URLs</p>
</div>
<div id="quickview"><ul id="toc"><li><img alt="" src="../images/down.gif" /> <a href="#InternalAPI">Phases de l'API</a></li>
<li><img alt="" src="../images/down.gif" /> <a href="#InternalRuleset">Traitement du jeu de r&#232;gles</a></li>
</ul><h3>Voir aussi</h3><ul class="seealso"><li><a href="../mod/mod_rewrite.html">Documentation du module mod_rewrite</a></li><li><a href="intro.html">Introduction &#224; mod_rewrite</a></li><li><a href="remapping.html">Redirection et remise en
correspondance</a></li><li><a href="access.html">Contr&#244;le d'acc&#232;s</a></li><li><a href="vhosts.html">Serveurs virtuels</a></li><li><a href="proxy.html">Mise en cache</a></li><li><a href="rewritemap.html">Utilisation de RewriteMap</a></li><li><a href="advanced.html">Techniques avanc&#233;es</a></li><li><a href="avoid.html">Quand ne pas utiliser mod_rewrite</a></li><li><a href="#comments_section">Commentaires</a></li></ul></div>
<div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="section">
<h2><a name="InternalAPI" id="InternalAPI">Phases de l'API</a><a title="Lien permanent" href="#InternalAPI" class="permalink">&para;</a></h2>

      <p>Le traitement des requ&#234;tes par le serveur HTTP Apache se
      d&#233;roule en plusieurs phases. Au cours de chaque phase, un ou
      plusieurs modules peuvent &#234;tre appel&#233;s pour traiter la partie
      concern&#233;e du cycle de vie de la requ&#234;te. Les diff&#233;rentes phases
      peuvent consister en traduction d'URL en nom de fichier,
      authentification, autorisation, gestion de contenu ou journalisation (la
      liste n'est pas exhaustive).</p>

    <p>mod_rewrite agit dans deux de ces phases (ou accroches - hooks -
    comme on les nomme souvent) pour la r&#233;&#233;criture des URLs.</p>

    <p>Tout d'abord, il utilise le hook traduction URL vers nom de
    fichier qui intervient apr&#232;s la lecture de la requ&#234;te HTTP, mais
    avant le processus d'autorisation. Ensuite, il utilise le hook
    Fixup, qui intervient apr&#232;s les phases d'autorisation, apr&#232;s la
    lecture des fichiers de configuration de niveau r&#233;pertoire (fichiers
    <code>.htaccess</code>), mais avant l'appel du gestionnaire de
    contenu.</p>

    <p>Lorsqu'une requ&#234;te arrive et une fois le serveur
    correspondant ou le serveur virtuel d&#233;termin&#233;, le moteur de
    r&#233;&#233;criture commence &#224; traiter toute directive apparaissant dans la
    configuration de niveau serveur (autrement dit dans le
    fichier de configuration principal du serveur et les sections
    <code class="directive"><a href="../mod/core.html#virtualhost">&lt;Virtualhost&gt;</a></code>).
    Tout ce processus s'ex&#233;cute au cours de la phase de traduction URL
    vers nom de fichier.</p>

    <p>Quelques &#233;tapes plus loin, une fois les r&#233;pertoires de donn&#233;es
    finaux trouv&#233;s, les directives de configuration de niveau r&#233;pertoire
    (fichiers <code>.htaccess</code> et sections <code class="directive"><a href="../mod/core.html#directory">&lt;Directory&gt;</a></code>) sont appliqu&#233;es. Ce processus
    s'ex&#233;cute au cours de la phase Fixup.</p>

    <p>Dans tous ces cas, mod_rewrite r&#233;&#233;crit le
    <code>REQUEST_URI</code> soit vers une nouvelle URL, soit vers un
    nom de fichier.</p>

    <p>Dans un contexte de niveau r&#233;pertoire (autrement dit dans les
    fichiers <code>.htaccess</code> et les sections
    <code>Directory</code>), les r&#232;gles de r&#233;&#233;criture s'appliquent apr&#232;s
    la traduction de l'URL en nom de fichier. C'est pourquoi le chemin
    URL auquel mod_rewrite compare initialement les directives
    <code class="directive"><a href="../mod/mod_rewrite.html#rewriterule">RewriteRule</a></code> est le
    chemin complet vers le nom de fichier traduit amput&#233; de la partie
    r&#233;pertoires (y compris le dernier slash).</p>

    <p>Un exemple : si les r&#232;gles se trouvent dans
    /var/www/foo/.htaccess et si une requ&#234;te pour /foo/bar/baz est
    trait&#233;, une expression comme ^bar/baz$ correspondra.</p>

    <p>Si une substitution intervient dans un contexte de r&#233;pertoire,
    une nouvelle sous-requ&#234;te interne est g&#233;n&#233;r&#233;e avec la nouvelle URL,
    ce qui relance le traitement des phases de la requ&#234;te. Si la
    substitution est un chemin relatif, la directive <code class="directive"><a href="../mod/mod_rewrite.html#rewritebase">RewriteBase</a></code> d&#233;termine le chemin URL
    devant pr&#233;fixer cette substitution. Dans un contexte de r&#233;pertoire,
    il faut s'assurer de cr&#233;er des r&#232;gles qui
    n'effectueront pas de substitution au
    cours d'une passe ult&#233;rieure du processus de r&#233;&#233;criture au niveau
    r&#233;pertoire afin d'&#233;viter les bouclages . Voir <a href="http://wiki.apache.org/httpd/RewriteLooping">Bouclage dans le
    processus de r&#233;&#233;criture</a> pour une discussion plus d&#233;taill&#233;e &#224;
    propos de ce probl&#232;me.</p>

    <p>En cons&#233;quence de cette manipulation de l'URL , vous devrez
    pensez &#224; confectionner diff&#233;remment vos r&#232;gles de r&#233;&#233;criture dans un
    contexte de niveau r&#233;pertoire. En particulier, rappelez-vous que le
    chemin de r&#233;pertoire sera absent de l'URL que vos r&#232;gles de
    r&#233;&#233;criture verront. Voici quelques exemples qui permettront de
    clarifier les choses :</p>

    <table class="bordered">

        <tr>
            <th>Position de la r&#232;gle</th>
            <th>R&#232;gle</th>
        </tr>

        <tr>
            <td>Section VirtualHost</td>
            <td>RewriteRule "^/images/(.+)\.jpg" "/images/$1.gif"</td>
        </tr>

        <tr>
            <td>Fichier .htaccess &#224; la racine des documents</td>
            <td>RewriteRule "^images/(.+)\.jpg" "images/$1.gif"</td>
        </tr>

        <tr>
            <td>Fichier .htaccess dans le r&#233;pertoire images</td>
            <td>RewriteRule "^(.+)\.jpg" "$1.gif"</td>
        </tr>

    </table>

    <p>Pour une &#233;tude plus approfondie de la mani&#232;re dont mod_rewrite
    manipule les URLs dans les diff&#233;rents contextes, vous pouvez
    consulter les <a href="../mod/mod_rewrite.html#logging">entr&#233;es du
    journal</a> g&#233;n&#233;r&#233;es au cours du processus de r&#233;&#233;criture.</p>

</div><div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="section">
<h2><a name="InternalRuleset" id="InternalRuleset">Traitement du jeu de r&#232;gles</a><a title="Lien permanent" href="#InternalRuleset" class="permalink">&para;</a></h2>

      <p>Maintenant, quand mod_rewrite se lance dans ces deux phases de
      l'API, il lit le jeu de r&#232;gles configur&#233;es depuis la structure
      contenant sa configuration (qui a &#233;t&#233; elle-m&#234;me cr&#233;&#233;e soit au
      d&#233;marrage d'Apache pour le contexte du serveur, soit lors du
      parcours des r&#233;pertoires par le noyau d'Apache pour le contexte de
      r&#233;pertoire). Puis le moteur de r&#233;&#233;criture est d&#233;marr&#233; avec le jeu
      de r&#232;gles contenu (une ou plusieurs r&#232;gles associ&#233;es &#224; leurs
      conditions). En lui-m&#234;me, le mode op&#233;ratoire du moteur de
      r&#233;&#233;criture d'URLs est exactement le m&#234;me dans les deux contextes
      de configuration. Seul le traitement du r&#233;sultat final diff&#232;re.</p>

      <p>L'ordre dans lequel les r&#232;gles sont d&#233;finies est important car
      le moteur de r&#233;&#233;criture les traite selon une chronologie
      particuli&#232;re (et pas tr&#232;s &#233;vidente). Le principe est le suivant :
      le moteur de r&#233;&#233;criture traite les r&#232;gles (les directives <code class="directive"><a href="../mod/mod_rewrite.html#rewriterule">RewriteRule</a></code>) les unes
      &#224; la suite des autres, et lorsqu'une r&#232;gle s'applique, il parcourt
      les &#233;ventuelles conditions (directives
      <code>RewriteCond</code>directives) associ&#233;es.
      Pour des raisons historiques, les
      conditions pr&#233;c&#232;dent les r&#232;gles, si bien que le d&#233;roulement du
      contr&#244;le est un peu compliqu&#233;. Voir la figure 1 pour plus de
      d&#233;tails.</p>
<p class="figure">
      <img src="../images/rewrite_process_uri.png" alt="Flux des comparaisons des directives RewriteRule et RewriteCond" /><br />
      <dfn>Figure 1:</dfn>D&#233;roulement du contr&#244;le &#224; travers le jeu de
      r&#232;gles de r&#233;&#233;criture
</p>
      <p>L'URL est tout d'abord compar&#233;e au
      <em>Mod&#232;le</em> de chaque r&#232;gle. Lorsqu'une r&#232;gle ne s'applique
      pas, mod_rewrite stoppe imm&#233;diatement le traitement de cette r&#232;gle
      et passe &#224; la r&#232;gle suivante. Si l'URL correspond au
      <em>Mod&#232;le</em>, mod_rewrite recherche la pr&#233;sence de conditions
      correspondantes (les directives Rewritecond apparaissant dans la
      configuration juste
      avant les r&#232;gles de r&#233;&#233;criture). S'il n'y en a pas, mod_rewrite remplace
      l'URL par une cha&#238;ne &#233;labor&#233;e &#224; partir de la cha&#238;ne de
      <em>Substitution</em>, puis passe &#224; la r&#232;gle suivante. Si des
      conditions sont pr&#233;sentes, mod_rewrite lance un bouclage
      secondaire afin de les traiter selon l'ordre dans lequel elles
      sont d&#233;finies. La logique de traitement des conditions est
      diff&#233;rente : on ne compare pas l'URL &#224; un mod&#232;le. Une cha&#238;ne de
      test <em>TestString</em> est tout d'abord &#233;labor&#233;e en d&#233;veloppant
      des variables, des r&#233;f&#233;rences arri&#232;res, des recherches dans des
      tables de correspondances, etc..., puis cette cha&#238;ne de test est
      compar&#233;e au mod&#232;le de condition <em>CondPattern</em>. Si le mod&#232;le
      ne correspond pas, les autres conditions du jeu ne sont pas
      examin&#233;es et la r&#232;gle correspondante ne s'applique pas. Si le
      mod&#232;le correspond, la condition suivante est examin&#233;e et ainsi de
      suite jusqu'&#224; la derni&#232;re condition. Si toutes les conditions sont
      satisfaites, le traitement de la r&#232;gle en cours se poursuit avec
      le remplacement de l'URL par la cha&#238;ne de <em>Substitution</em>.</p>

</div></div>
<div class="bottomlang">
<p><span>Langues Disponibles: </span><a href="../en/rewrite/tech.html" hreflang="en" rel="alternate" title="English">&nbsp;en&nbsp;</a> |
<a href="../fr/rewrite/tech.html" title="Fran&#231;ais">&nbsp;fr&nbsp;</a></p>
</div><div class="top"><a href="#page-header"><img src="../images/up.gif" alt="top" /></a></div><div class="section"><h2><a id="comments_section" name="comments_section">Commentaires</a></h2><div class="warning"><strong>Notice:</strong><br />This is not a Q&amp;A section. Comments placed here should be pointed towards suggestions on improving the documentation or server, and may be removed again by our moderators if they are either implemented or considered invalid/off-topic. Questions on how to manage the Apache HTTP Server should be directed at either our IRC channel, #httpd, on Freenode, or sent to our <a href="http://httpd.apache.org/lists.html">mailing lists</a>.</div>
<script type="text/javascript"><!--//--><![CDATA[//><!--
var comments_shortname = 'httpd';
var comments_identifier = 'http://httpd.apache.org/docs/trunk/rewrite/tech.html';
(function(w, d) {
    if (w.location.hostname.toLowerCase() == "httpd.apache.org") {
        d.write('<div id="comments_thread"><\/div>');
        var s = d.createElement('script');
        s.type = 'text/javascript';
        s.async = true;
        s.src = 'https://comments.apache.org/show_comments.lua?site=' + comments_shortname + '&page=' + comments_identifier;
        (d.getElementsByTagName('head')[0] || d.getElementsByTagName('body')[0]).appendChild(s);
    }
    else {
        d.write('<div id="comments_thread">Comments are disabled for this page at the moment.<\/div>');
    }
})(window, document);
//--><!]]></script></div><div id="footer">
<p class="apache">Copyright 2018 The Apache Software Foundation.<br />Autoris&#233; sous <a href="http://www.apache.org/licenses/LICENSE-2.0">Apache License, Version 2.0</a>.</p>
<p class="menu"><a href="../mod/">Modules</a> | <a href="../mod/quickreference.html">Directives</a> | <a href="http://wiki.apache.org/httpd/FAQ">FAQ</a> | <a href="../glossary.html">Glossaire</a> | <a href="../sitemap.html">Plan du site</a></p></div><script type="text/javascript"><!--//--><![CDATA[//><!--
if (typeof(prettyPrint) !== 'undefined') {
    prettyPrint();
}
//--><!]]></script>
</body></html>